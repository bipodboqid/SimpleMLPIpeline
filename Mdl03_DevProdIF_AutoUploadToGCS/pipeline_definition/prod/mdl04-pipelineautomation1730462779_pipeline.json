{"displayName": "mdl04-pipelineautomation", "labels": {"tfx_py_version": "3-10", "tfx_runner": "kubeflow_v2", "tfx_version": "1-15-0"}, "pipelineSpec": {"components": {"Evaluator": {"executorLabel": "Evaluator_executor", "inputDefinitions": {"artifacts": {"baseline_model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}}, "parameters": {"eval_config": {"type": "STRING"}, "example_splits": {"type": "STRING"}, "fairness_indicator_thresholds": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"blessing": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}, "evaluation": {"artifactType": {"instanceSchema": "title: tfx.ModelEvaluation\ntype: object\n"}}}}}, "ImportExampleGen": {"executorLabel": "ImportExampleGen_executor", "inputDefinitions": {"parameters": {"input_base": {"type": "STRING"}, "input_config": {"type": "STRING"}, "output_config": {"type": "STRING"}, "output_data_format": {"type": "INT"}, "output_file_format": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "ImportExampleGenForEvaluator": {"executorLabel": "ImportExampleGenForEvaluator_executor", "inputDefinitions": {"parameters": {"input_base": {"type": "STRING"}, "input_config": {"type": "STRING"}, "output_config": {"type": "STRING"}, "output_data_format": {"type": "INT"}, "output_file_format": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "Pusher": {"executorLabel": "Pusher_executor", "inputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"pushed_model": {"artifactType": {"instanceSchema": "title: tfx.PushedModel\ntype: object\n"}}}}}, "SchemaGen": {"executorLabel": "SchemaGen_executor", "inputDefinitions": {"artifacts": {"statistics": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}, "parameters": {"exclude_splits": {"type": "STRING"}, "infer_feature_shape": {"type": "INT"}}}, "outputDefinitions": {"artifacts": {"schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}}}, "StatisticsGen": {"executorLabel": "StatisticsGen_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}, "parameters": {"exclude_splits": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"statistics": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}}}}, "Trainer": {"executorLabel": "Trainer_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "eval_args": {"type": "STRING"}, "module_path": {"type": "STRING"}, "train_args": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}, "model_run": {"artifactType": {"instanceSchema": "title: tfx.ModelRun\ntype: object\n"}}}}}, "Transform": {"executorLabel": "Transform_executor", "inputDefinitions": {"artifacts": {"examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}}, "parameters": {"custom_config": {"type": "STRING"}, "disable_statistics": {"type": "INT"}, "force_tf_compat_v1": {"type": "INT"}, "module_path": {"type": "STRING"}}}, "outputDefinitions": {"artifacts": {"post_transform_anomalies": {"artifactType": {"instanceSchema": "title: tfx.ExampleAnomalies\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "post_transform_schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "post_transform_stats": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "pre_transform_schema": {"artifactType": {"instanceSchema": "title: tfx.Schema\ntype: object\n"}}, "pre_transform_stats": {"artifactType": {"instanceSchema": "title: tfx.ExampleStatistics\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "transform_graph": {"artifactType": {"instanceSchema": "title: tfx.TransformGraph\ntype: object\n"}}, "transformed_examples": {"artifactType": {"instanceSchema": "title: tfx.Examples\ntype: object\nproperties:\n  span:\n    type: integer\n    description: Span for an artifact.\n  version:\n    type: integer\n    description: Version for an artifact.\n  split_names:\n    type: string\n    description: JSON-encoded list of splits for an artifact. Empty string means artifact has no split.\n"}}, "updated_analyzer_cache": {"artifactType": {"instanceSchema": "title: tfx.TransformCache\ntype: object\n"}}}}}, "latest_blessed_model_resolver-model-blessing-resolver": {"executorLabel": "latest_blessed_model_resolver-model-blessing-resolver_executor", "outputDefinitions": {"artifacts": {"model_blessing": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}}}}, "latest_blessed_model_resolver-model-resolver": {"executorLabel": "latest_blessed_model_resolver-model-resolver_executor", "inputDefinitions": {"artifacts": {"input": {"artifactType": {"instanceSchema": "title: tfx.ModelBlessing\ntype: object\n"}}}}, "outputDefinitions": {"artifacts": {"model": {"artifactType": {"instanceSchema": "title: tfx.Model\ntype: object\n"}}}}}}, "deploymentSpec": {"executors": {"Evaluator_executor": {"container": {"args": ["--executor_class_path", "tfx.components.evaluator.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0"}}, "ImportExampleGenForEvaluator_executor": {"container": {"args": ["--executor_class_path", "tfx.components.example_gen.import_example_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0", "lifecycle": {"preCacheCheck": {"args": ["--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.file_based_example_gen.driver"]}}}}, "ImportExampleGen_executor": {"container": {"args": ["--executor_class_path", "tfx.components.example_gen.import_example_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0", "lifecycle": {"preCacheCheck": {"args": ["--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.file_based_example_gen.driver"]}}}}, "Pusher_executor": {"container": {"args": ["--executor_class_path", "tfx.extensions.google_cloud_ai_platform.pusher.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0"}}, "SchemaGen_executor": {"container": {"args": ["--executor_class_path", "tfx.components.schema_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0"}}, "StatisticsGen_executor": {"container": {"args": ["--executor_class_path", "tfx.components.statistics_gen.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0"}}, "Trainer_executor": {"container": {"args": ["--executor_class_path", "tfx.components.trainer.executor.GenericExecutor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0"}}, "Transform_executor": {"container": {"args": ["--executor_class_path", "tfx.components.transform.executor.Executor", "--json_serialized_invocation_args", "{{$}}"], "command": ["python", "-m", "tfx.orchestration.kubeflow.v2.container.kubeflow_v2_run_executor"], "image": "gcr.io/tfx-oss-public/tfx:1.15.0"}}, "latest_blessed_model_resolver-model-blessing-resolver_executor": {"resolver": {"outputArtifactQueries": {"model_blessing": {"filter": "schema_title=\"tfx.ModelBlessing\" AND state=LIVE AND metadata.blessed.number_value=1"}}}}, "latest_blessed_model_resolver-model-resolver_executor": {"resolver": {"outputArtifactQueries": {"model": {"filter": "schema_title=\"tfx.Model\" AND state=LIVE AND name=\"{{$.inputs.artifacts['input'].metadata['current_model_id']}}\""}}}}}}, "pipelineInfo": {"name": "mdl04-pipelineautomation"}, "root": {"dag": {"tasks": {"Evaluator": {"componentRef": {"name": "Evaluator"}, "dependentTasks": ["ImportExampleGenForEvaluator", "Trainer", "latest_blessed_model_resolver-model-resolver"], "inputs": {"artifacts": {"baseline_model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "latest_blessed_model_resolver-model-resolver"}}, "examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "ImportExampleGenForEvaluator"}}, "model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "Trainer"}}}, "parameters": {"eval_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"metrics_specs\": [\n    {\n      \"example_weights\": {\n        \"unweighted\": true\n      },\n      \"metrics\": [\n        {\n          \"class_name\": \"ExampleCount\",\n          \"config\": \"{\\\"name\\\": \\\"example_count\\\"}\"\n        }\n      ]\n    },\n    {\n      \"example_weights\": {\n        \"weighted\": true\n      },\n      \"metrics\": [\n        {\n          \"class_name\": \"WeightedExampleCount\",\n          \"config\": \"{\\\"name\\\": \\\"weighted_example_count\\\"}\"\n        }\n      ]\n    },\n    {\n      \"metrics\": [\n        {\n          \"class_name\": \"BinaryAccuracy\",\n          \"config\": \"{\\\"name\\\": \\\"binary_accuracy\\\"}\"\n        },\n        {\n          \"class_name\": \"AUC\",\n          \"config\": \"{\\\"curve\\\": \\\"ROC\\\", \\\"name\\\": \\\"auc\\\", \\\"num_thresholds\\\": 10000, \\\"summation_method\\\": \\\"interpolation\\\"}\"\n        },\n        {\n          \"class_name\": \"AUC\",\n          \"config\": \"{\\\"curve\\\": \\\"PR\\\", \\\"name\\\": \\\"auc_precison_recall\\\", \\\"num_thresholds\\\": 10000, \\\"summation_method\\\": \\\"interpolation\\\"}\"\n        },\n        {\n          \"class_name\": \"Precision\",\n          \"config\": \"{\\\"name\\\": \\\"precision\\\"}\"\n        },\n        {\n          \"class_name\": \"Recall\",\n          \"config\": \"{\\\"name\\\": \\\"recall\\\"}\"\n        },\n        {\n          \"class_name\": \"MeanLabel\",\n          \"config\": \"{\\\"name\\\": \\\"mean_label\\\"}\"\n        },\n        {\n          \"class_name\": \"MeanPrediction\",\n          \"config\": \"{\\\"name\\\": \\\"mean_prediction\\\"}\"\n        },\n        {\n          \"class_name\": \"Calibration\",\n          \"config\": \"{\\\"name\\\": \\\"calibration\\\"}\"\n        },\n        {\n          \"class_name\": \"ConfusionMatrixPlot\",\n          \"config\": \"{\\\"name\\\": \\\"confusion_matrix_plot\\\", \\\"num_thresholds\\\": 1000}\"\n        },\n        {\n          \"class_name\": \"CalibrationPlot\",\n          \"config\": \"{\\\"left\\\": null, \\\"name\\\": \\\"calibration_plot\\\", \\\"num_buckets\\\": 1000, \\\"right\\\": null}\"\n        },\n        {\n          \"class_name\": \"BinaryCrossentropy\",\n          \"config\": \"{\\\"dtype\\\": \\\"float32\\\", \\\"from_logits\\\": false, \\\"label_smoothing\\\": 0, \\\"name\\\": \\\"loss\\\"}\",\n          \"module\": \"keras.src.metrics.probabilistic_metrics\"\n        }\n      ]\n    }\n  ],\n  \"model_specs\": [\n    {\n      \"label_key\": \"label\"\n    }\n  ],\n  \"slicing_specs\": [\n    {}\n  ]\n}"}}}, "example_splits": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "fairness_indicator_thresholds": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}}}, "taskInfo": {"name": "Evaluator"}}, "ImportExampleGen": {"componentRef": {"name": "ImportExampleGen"}, "inputs": {"parameters": {"input_base": {"runtimeValue": {"constantValue": {"stringValue": "gs://mlpipelineportfolio_bucket_01/for_production/upload_from_github/tfrecord/plantvillage-train-15percent"}}}, "input_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"splits\": [\n    {\n      \"name\": \"single_split\",\n      \"pattern\": \"*\"\n    }\n  ]\n}"}}}, "output_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"split_config\": {\n    \"splits\": [\n      {\n        \"hash_buckets\": 2,\n        \"name\": \"train\"\n      },\n      {\n        \"hash_buckets\": 1,\n        \"name\": \"eval\"\n      }\n    ]\n  }\n}"}}}, "output_data_format": {"runtimeValue": {"constantValue": {"intValue": "6"}}}, "output_file_format": {"runtimeValue": {"constantValue": {"intValue": "5"}}}}}, "taskInfo": {"name": "ImportExampleGen"}}, "ImportExampleGenForEvaluator": {"componentRef": {"name": "ImportExampleGenForEvaluator"}, "inputs": {"parameters": {"input_base": {"runtimeValue": {"constantValue": {"stringValue": "gs://mlpipelineportfolio_bucket_01/for_production/upload_from_github/tfrecord/plantvillage-test-5percent"}}}, "input_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"splits\": [\n    {\n      \"name\": \"single_split\",\n      \"pattern\": \"*\"\n    }\n  ]\n}"}}}, "output_config": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"split_config\": {\n    \"splits\": [\n      {\n        \"hash_buckets\": 2,\n        \"name\": \"train\"\n      },\n      {\n        \"hash_buckets\": 1,\n        \"name\": \"eval\"\n      }\n    ]\n  }\n}"}}}, "output_data_format": {"runtimeValue": {"constantValue": {"intValue": "6"}}}, "output_file_format": {"runtimeValue": {"constantValue": {"intValue": "5"}}}}}, "taskInfo": {"name": "ImportExampleGenForEvaluator"}}, "Pusher": {"componentRef": {"name": "Pusher"}, "dependentTasks": ["Trainer"], "inputs": {"artifacts": {"model": {"taskOutputArtifact": {"outputArtifactKey": "model", "producerTask": "Trainer"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "{\"ai_platform_enable_vertex\": true, \"ai_platform_serving_args\": {\"endpoint_name\": \"prediction-mdl04-pipelineautomation\", \"machine_type\": \"n1-standard-4\", \"project_id\": \"mlpipelineportfolio\"}, \"ai_platform_vertex_container_image_uri\": \"us-docker.pkg.dev/vertex-ai/prediction/tf2-cpu.2-6:latest\", \"ai_platform_vertex_region\": \"asia-northeast1\"}"}}}}}, "taskInfo": {"name": "Pusher"}}, "SchemaGen": {"componentRef": {"name": "SchemaGen"}, "dependentTasks": ["StatisticsGen"], "inputs": {"artifacts": {"statistics": {"taskOutputArtifact": {"outputArtifactKey": "statistics", "producerTask": "StatisticsGen"}}}, "parameters": {"exclude_splits": {"runtimeValue": {"constantValue": {"stringValue": "[]"}}}, "infer_feature_shape": {"runtimeValue": {"constantValue": {"intValue": "0"}}}}}, "taskInfo": {"name": "SchemaGen"}}, "StatisticsGen": {"componentRef": {"name": "StatisticsGen"}, "dependentTasks": ["ImportExampleGen"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "ImportExampleGen"}}}, "parameters": {"exclude_splits": {"runtimeValue": {"constantValue": {"stringValue": "[]"}}}}}, "taskInfo": {"name": "StatisticsGen"}}, "Trainer": {"componentRef": {"name": "Trainer"}, "dependentTasks": ["ImportExampleGen", "SchemaGen", "Transform"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "ImportExampleGen"}}, "schema": {"taskOutputArtifact": {"outputArtifactKey": "schema", "producerTask": "SchemaGen"}}, "transform_graph": {"taskOutputArtifact": {"outputArtifactKey": "transform_graph", "producerTask": "Transform"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "eval_args": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"num_steps\": 22\n}"}}}, "module_path": {"runtimeValue": {"constantValue": {"stringValue": "utils@gs://mlpipelineportfolio_bucket_01/for_production/pipeline_root/mdl04-pipelineautomation/_wheels/tfx_user_code_Trainer-0.0+705e2ed97fc382476fb08875ca2354840f8a3e0321195c674abc39f993f70221-py3-none-any.whl"}}}, "train_args": {"runtimeValue": {"constantValue": {"stringValue": "{\n  \"num_steps\": 24\n}"}}}}}, "taskInfo": {"name": "Trainer"}}, "Transform": {"componentRef": {"name": "Transform"}, "dependentTasks": ["ImportExampleGen", "SchemaGen"], "inputs": {"artifacts": {"examples": {"taskOutputArtifact": {"outputArtifactKey": "examples", "producerTask": "ImportExampleGen"}}, "schema": {"taskOutputArtifact": {"outputArtifactKey": "schema", "producerTask": "SchemaGen"}}}, "parameters": {"custom_config": {"runtimeValue": {"constantValue": {"stringValue": "null"}}}, "disable_statistics": {"runtimeValue": {"constantValue": {"intValue": "0"}}}, "force_tf_compat_v1": {"runtimeValue": {"constantValue": {"intValue": "0"}}}, "module_path": {"runtimeValue": {"constantValue": {"stringValue": "utils@gs://mlpipelineportfolio_bucket_01/for_production/pipeline_root/mdl04-pipelineautomation/_wheels/tfx_user_code_Transform-0.0+705e2ed97fc382476fb08875ca2354840f8a3e0321195c674abc39f993f70221-py3-none-any.whl"}}}}}, "taskInfo": {"name": "Transform"}}, "latest_blessed_model_resolver-model-blessing-resolver": {"componentRef": {"name": "latest_blessed_model_resolver-model-blessing-resolver"}, "taskInfo": {"name": "latest_blessed_model_resolver-model-blessing-resolver"}}, "latest_blessed_model_resolver-model-resolver": {"componentRef": {"name": "latest_blessed_model_resolver-model-resolver"}, "inputs": {"artifacts": {"input": {"taskOutputArtifact": {"outputArtifactKey": "model_blessing", "producerTask": "latest_blessed_model_resolver-model-blessing-resolver"}}}}, "taskInfo": {"name": "latest_blessed_model_resolver-model-resolver"}}}}}, "schemaVersion": "2.0.0", "sdkVersion": "tfx-1.15.0"}, "runtimeConfig": {"gcsOutputDirectory": "gs://mlpipelineportfolio_bucket_01/for_production/pipeline_root/mdl04-pipelineautomation"}}